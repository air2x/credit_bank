version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: credit_bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    networks:
      - microservices-network

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_LISTENERS: INSIDE://0.0.0.0:9092,OUTSIDE://0.0.0.0:9094
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - "9094:9094"
    depends_on:
      - zookeeper
    networks:
      - microservices-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  library:
    build:
      context: ./bank-my-library
      dockerfile: Dockerfile
    networks:
      - microservices-network

  calculator:
    build:
      context: ./calculator_microservice
      dockerfile: Dockerfile
    depends_on:
      - library
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  deal:
    build:
      context: ./deal_microservice
      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/credit_bank
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - microservices-network

  statement:
    build:
      context: ./statement_microservice
      dockerfile: Dockerfile
    ports:
      - "8082:8080"
    networks:
      - microservices-network

  dossier:
    build:
      context: ./dossier_microservice
      dockerfile: Dockerfile
    ports:
      - "8083:8080"
    networks:
      - microservices-network

  gateway:
    build:
      context: ./API_Gateway_microservice
      dockerfile: Dockerfile
    ports:
      - "8084:8080"
    networks:
      - microservices-network

networks:
  microservices-network:
