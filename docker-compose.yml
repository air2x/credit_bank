version: '3.8'

services:
  postgres:
    image: postgres:16-alpine
    environment:
      POSTGRES_DB: credit_bank
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres -d credit_bank"]
      interval: 5s
      timeout: 5s
      retries: 10
    networks:
      - microservices-network

  zookeeper:
    image: wurstmeister/zookeeper:latest
    ports:
      - "2181:2181"
    networks:
      - microservices-network

  kafka:
    image: wurstmeister/kafka:latest
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://kafka:9092,OUTSIDE://localhost:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: "true"
    ports:
      - "9094:9094"
    depends_on:
      - zookeeper
    healthcheck:
      test: ["CMD", "kafka-topics.sh", "--list", "--bootstrap-server", "kafka:9092"]
      interval: 10s
      timeout: 5s
      retries: 10
    networks:
      - microservices-network

  calculator:
    build:
      context: .
      dockerfile: calculator_microservice/Dockerfile
    depends_on:
      - kafka
      - postgres
    ports:
      - "8080:8080"
    networks:
      - microservices-network

  deal:
    build:
      context: .
      dockerfile: deal_microservice/Dockerfile
    depends_on:
      - kafka
      - postgres
    ports:
      - "8081:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/credit_bank
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - microservices-network

  statement:
    build:
      context: .
      dockerfile: statement_microservice/Dockerfile
    depends_on:
      - kafka
      - postgres
    ports:
      - "8082:8080"
    networks:
      - microservices-network

  dossier:
    build:
      context: .
      dockerfile: dossier_microservice/Dockerfile
    depends_on:
      - kafka
      - postgres
    ports:
      - "8083:8080"
    environment:
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/credit_bank
      SPRING_KAFKA_BOOTSTRAP_SERVERS: kafka:9092
    networks:
      - microservices-network

  gateway:
    build:
      context: .
      dockerfile: API_Gateway_microservice/Dockerfile
    depends_on:
      - calculator
      - deal
      - statement
      - dossier
    ports:
      - "8084:8080"
    networks:
      - microservices-network

networks:
  microservices-network:
    driver: bridge