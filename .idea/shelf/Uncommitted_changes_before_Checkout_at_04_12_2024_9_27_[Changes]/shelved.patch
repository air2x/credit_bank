Index: calculator_microservice/src/test/java/ru/neoflex/calculator_microservice/controllers/CalculatorControllerTest.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package ru.neoflex.calculator_microservice.controllers;\r\n\r\nimport org.junit.jupiter.api.BeforeEach;\r\nimport org.junit.jupiter.api.Test;\r\nimport org.mockito.InjectMocks;\r\nimport org.mockito.Mock;\r\nimport org.mockito.MockitoAnnotations;\r\nimport ru.neoflex.calculator_microservice.dto.*;\r\nimport ru.neoflex.calculator_microservice.services.CalculateService;\r\nimport ru.neoflex.calculator_microservice.services.LoanOffersService;\r\n\r\nimport java.math.BigDecimal;\r\nimport java.time.LocalDate;\r\nimport java.util.List;\r\n\r\nimport static org.mockito.Mockito.*;\r\nimport static ru.neoflex.calculator_microservice.enums.EmploymentStatus.EMPLOYED;\r\nimport static ru.neoflex.calculator_microservice.enums.Gender.MALE;\r\nimport static ru.neoflex.calculator_microservice.enums.MaritalStatus.MARRIED;\r\nimport static ru.neoflex.calculator_microservice.enums.PositionAtWork.JUNIOR_MANAGER;\r\n\r\nclass CalculatorControllerTest {\r\n\r\n    @Mock\r\n    private CalculateService calculateService;\r\n    @Mock\r\n    private LoanOffersService loanOffersService;\r\n\r\n    @InjectMocks\r\n    private CalculatorController calculatorController;\r\n\r\n    @BeforeEach\r\n    public void setUp() {\r\n        MockitoAnnotations.openMocks(this);\r\n    }\r\n\r\n    @Test\r\n    void offers() {\r\n        LoanStatementRequestDto loanStatementRequestDto = new LoanStatementRequestDto();\r\n        loanStatementRequestDto.setAmount(BigDecimal.valueOf(20000));\r\n        loanStatementRequestDto.setTerm(24);\r\n        loanStatementRequestDto.setEmail(\"test@mail.com\");\r\n        List<LoanOfferDto> loanOffersDto = loanOffersService.getLoanOffersDto(loanStatementRequestDto);\r\n\r\n        when(loanOffersService.getLoanOffersDto(loanStatementRequestDto)).thenReturn(loanOffersDto);\r\n        verify(loanOffersService).getLoanOffersDto(loanStatementRequestDto);\r\n    }\r\n\r\n    @Test\r\n    void testOffers() {\r\n        ScoringDataDto scoringDataDto = new ScoringDataDto();\r\n        EmploymentDto employmentDto = new EmploymentDto();\r\n        scoringDataDto.setAmount(BigDecimal.valueOf(20000));\r\n        scoringDataDto.setBirthday(LocalDate.ofEpochDay(2000 - 10 - 15));\r\n        scoringDataDto.setTerm(12);\r\n        scoringDataDto.setFirstName(\"Name\");\r\n        scoringDataDto.setLastName(\"Last name\");\r\n        scoringDataDto.setMiddleName(\"Middle name\");\r\n        scoringDataDto.setGender(MALE);\r\n        scoringDataDto.setMaritalStatus(MARRIED);\r\n        scoringDataDto.setIsInsuranceEnabled(true);\r\n        scoringDataDto.setIsSalaryClient(true);\r\n        scoringDataDto.setPassportSeries(\"1234\");\r\n        scoringDataDto.setPassportNumber(\"987654\");\r\n\r\n        employmentDto.setSalary(BigDecimal.valueOf(20000));\r\n        employmentDto.setEmploymentStatus(EMPLOYED);\r\n        employmentDto.setPosition(JUNIOR_MANAGER);\r\n        employmentDto.setWorkExperienceTotal(60);\r\n        employmentDto.setWorkExperienceCurrent(12);\r\n\r\n        scoringDataDto.setEmployment(employmentDto);\r\n\r\n        CreditDto creditDto = calculateService.getCreditDto(scoringDataDto);\r\n\r\n        when(calculateService.getCreditDto(scoringDataDto)).thenReturn(creditDto);\r\n        verify(calculateService).getCreditDto(scoringDataDto);\r\n    }\r\n}
===================================================================
diff --git a/calculator_microservice/src/test/java/ru/neoflex/calculator_microservice/controllers/CalculatorControllerTest.java b/calculator_microservice/src/test/java/ru/neoflex/calculator_microservice/controllers/CalculatorControllerTest.java
--- a/calculator_microservice/src/test/java/ru/neoflex/calculator_microservice/controllers/CalculatorControllerTest.java	
+++ b/calculator_microservice/src/test/java/ru/neoflex/calculator_microservice/controllers/CalculatorControllerTest.java	
@@ -1,79 +1,16 @@
 package ru.neoflex.calculator_microservice.controllers;
 
-import org.junit.jupiter.api.BeforeEach;
 import org.junit.jupiter.api.Test;
-import org.mockito.InjectMocks;
-import org.mockito.Mock;
-import org.mockito.MockitoAnnotations;
-import ru.neoflex.calculator_microservice.dto.*;
-import ru.neoflex.calculator_microservice.services.CalculateService;
-import ru.neoflex.calculator_microservice.services.LoanOffersService;
 
-import java.math.BigDecimal;
-import java.time.LocalDate;
-import java.util.List;
-
-import static org.mockito.Mockito.*;
-import static ru.neoflex.calculator_microservice.enums.EmploymentStatus.EMPLOYED;
-import static ru.neoflex.calculator_microservice.enums.Gender.MALE;
-import static ru.neoflex.calculator_microservice.enums.MaritalStatus.MARRIED;
-import static ru.neoflex.calculator_microservice.enums.PositionAtWork.JUNIOR_MANAGER;
+import static org.junit.jupiter.api.Assertions.*;
 
 class CalculatorControllerTest {
 
-    @Mock
-    private CalculateService calculateService;
-    @Mock
-    private LoanOffersService loanOffersService;
-
-    @InjectMocks
-    private CalculatorController calculatorController;
-
-    @BeforeEach
-    public void setUp() {
-        MockitoAnnotations.openMocks(this);
-    }
-
     @Test
     void offers() {
-        LoanStatementRequestDto loanStatementRequestDto = new LoanStatementRequestDto();
-        loanStatementRequestDto.setAmount(BigDecimal.valueOf(20000));
-        loanStatementRequestDto.setTerm(24);
-        loanStatementRequestDto.setEmail("test@mail.com");
-        List<LoanOfferDto> loanOffersDto = loanOffersService.getLoanOffersDto(loanStatementRequestDto);
-
-        when(loanOffersService.getLoanOffersDto(loanStatementRequestDto)).thenReturn(loanOffersDto);
-        verify(loanOffersService).getLoanOffersDto(loanStatementRequestDto);
     }
 
     @Test
     void testOffers() {
-        ScoringDataDto scoringDataDto = new ScoringDataDto();
-        EmploymentDto employmentDto = new EmploymentDto();
-        scoringDataDto.setAmount(BigDecimal.valueOf(20000));
-        scoringDataDto.setBirthday(LocalDate.ofEpochDay(2000 - 10 - 15));
-        scoringDataDto.setTerm(12);
-        scoringDataDto.setFirstName("Name");
-        scoringDataDto.setLastName("Last name");
-        scoringDataDto.setMiddleName("Middle name");
-        scoringDataDto.setGender(MALE);
-        scoringDataDto.setMaritalStatus(MARRIED);
-        scoringDataDto.setIsInsuranceEnabled(true);
-        scoringDataDto.setIsSalaryClient(true);
-        scoringDataDto.setPassportSeries("1234");
-        scoringDataDto.setPassportNumber("987654");
-
-        employmentDto.setSalary(BigDecimal.valueOf(20000));
-        employmentDto.setEmploymentStatus(EMPLOYED);
-        employmentDto.setPosition(JUNIOR_MANAGER);
-        employmentDto.setWorkExperienceTotal(60);
-        employmentDto.setWorkExperienceCurrent(12);
-
-        scoringDataDto.setEmployment(employmentDto);
-
-        CreditDto creditDto = calculateService.getCreditDto(scoringDataDto);
-
-        when(calculateService.getCreditDto(scoringDataDto)).thenReturn(creditDto);
-        verify(calculateService).getCreditDto(scoringDataDto);
     }
 }
\ No newline at end of file
