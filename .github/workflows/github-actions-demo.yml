name: CI Pipeline

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest
    timeout-minutes: 45
    strategy:
      matrix:
        service: 
          - bank-my-library
          - calculator_microservice
          - deal_microservice
          - dossier_microservice
          - statement_microservice
          - API_Gateway_microservice

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0  # Важно для SonarScanner

      - name: Cache Maven dependencies
        uses: actions/cache@v3
        with:
          path: ~/.m2/repository
          key: maven-${{ runner.os }}-${{ hashFiles('**/pom.xml') }}
          restore-keys: |
            maven-${{ runner.os }}-

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: 'maven'

      - name: Build Shared Library
        if: matrix.service == 'bank-my-library'
        run: |
          cd bank-my-library
          mvn clean install -DskipTests

      - name: Build and Test
        run: |
          if [ "${{ matrix.service }}" != "bank-my-library" ]; then
            cd bank-my-library
            mvn install -DskipTests
            cd ..
          fi
          cd ${{ matrix.service }}
          mvn clean verify

      - name: Verify Jacoco Report
        run: |
          if [ "${{ matrix.service }}" != "bank-my-library" ]; then
            echo "Checking report in ${{ matrix.service }}"
            test -f ${{ matrix.service }}/target/site/jacoco/jacoco.xml || exit 1
          fi

      - name: CodeCov Upload
        if: matrix.service != 'bank-my-library'
        timeout-minutes: 5
        uses: codecov/codecov-action@v4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ${{ matrix.service }}/target/site/jacoco/jacoco.xml
          flags: ${{ matrix.service }}
          verbose: true
          fail_ci_if_error: false

      - name: SonarCloud Scan
        if: matrix.service != 'bank-my-library'
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          cd ${{ matrix.service }}
          mvn -B sonar:sonar \
            -Dsonar.projectKey=air2x_credit_bank \
            -Dsonar.organization=air2x \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.login=$SONAR_TOKEN \
            -Dsonar.scm.provider=git \
            -Dsonar.projectName=${{ matrix.service }} \
            -Dsonar.sourceEncoding=UTF-8
